<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/WAPaginatedArticlesViewController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/WAPaginatedArticlesViewController</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.h</DeclaredIn>
			
			<NodeRef refid="52"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAPaginatedArticlesViewController/context</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) NSDictionary *context</Declaration>
			
			
			<Anchor>//api/name/context</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/initWithNibName:bundle:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil</Declaration>
			
			
			<Anchor>//api/name/initWithNibName:bundle:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/dealloc</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)dealloc</Declaration>
			
			
			<Anchor>//api/name/dealloc</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/loadView</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)loadView</Declaration>
			
			
			<Anchor>//api/name/loadView</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/viewDidLoad</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidLoad</Declaration>
			
			
			<Anchor>//api/name/viewDidLoad</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/viewDidUnload</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidUnload</Declaration>
			
			
			<Anchor>//api/name/viewDidUnload</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/viewWillAppear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewWillAppear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewWillAppear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/viewDidAppear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidAppear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewDidAppear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/viewWillDisappear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewWillDisappear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewWillDisappear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/viewDidDisappear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidDisappear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewDidDisappear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/setContextControlsVisible:animated:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)setContextControlsVisible:(BOOL)contextControlsVisible animated:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/setContextControlsVisible:animated:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/observeValueForKeyPath:ofObject:change:context:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context</Declaration>
			
			
			<Anchor>//api/name/observeValueForKeyPath:ofObject:change:context:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/numberOfViewsInPaginatedView:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (NSUInteger)numberOfViewsInPaginatedView:(IRPaginatedView *)paginatedView</Declaration>
			
			
			<Anchor>//api/name/numberOfViewsInPaginatedView:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/viewForPaginatedView:atIndex:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (UIView *)viewForPaginatedView:(IRPaginatedView *)aPaginatedView atIndex:(NSUInteger)index</Declaration>
			
			
			<Anchor>//api/name/viewForPaginatedView:atIndex:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/viewControllerForSubviewAtIndex:inPaginatedView:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (UIViewController *)viewControllerForSubviewAtIndex:(NSUInteger)index inPaginatedView:(IRPaginatedView *)paginatedView</Declaration>
			
			
			<Anchor>//api/name/viewControllerForSubviewAtIndex:inPaginatedView:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/paginationSlider:didMoveToPage:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)paginationSlider:(WAPaginationSlider *)slider didMoveToPage:(NSUInteger)destinationPage</Declaration>
			
			
			<Anchor>//api/name/paginationSlider:didMoveToPage:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/handleArticleContentsDismissal:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)handleArticleContentsDismissal:(UIButton *)sender</Declaration>
			
			
			<Anchor>//api/name/handleArticleContentsDismissal:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/willAnimateRotationToInterfaceOrientation:duration:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration</Declaration>
			
			
			<Anchor>//api/name/willAnimateRotationToInterfaceOrientation:duration:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/shouldAutorotateToInterfaceOrientation:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)newOrientation</Declaration>
			
			
			<Anchor>//api/name/shouldAutorotateToInterfaceOrientation:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/inferredArticleCommentsVisible</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (BOOL)inferredArticleCommentsVisible</Declaration>
			
			
			<Anchor>//api/name/inferredArticleCommentsVisible</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/updateLayoutForCommentsVisible:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)updateLayoutForCommentsVisible:(BOOL)showingDetailedComments</Declaration>
			
			
			<Anchor>//api/name/updateLayoutForCommentsVisible:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/articleCommentsViewController:canSendComment:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (BOOL)articleCommentsViewController:(WAArticleCommentsViewController *)controller canSendComment:(NSString *)commentText</Declaration>
			
			
			<Anchor>//api/name/articleCommentsViewController:canSendComment:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/articleCommentsViewController:wantsState:onFulfillment:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)articleCommentsViewController:(WAArticleCommentsViewController *)controller wantsState:(WAArticleCommentsViewControllerState)aState onFulfillment:(void ( ^ ) ( void ))aCompletionBlock</Declaration>
			
			
			<Anchor>//api/name/articleCommentsViewController:wantsState:onFulfillment:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/articleCommentsViewController:didFinishComposingComment:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)articleCommentsViewController:(WAArticleCommentsViewController *)controller didFinishComposingComment:(NSString *)commentText</Declaration>
			
			
			<Anchor>//api/name/articleCommentsViewController:didFinishComposingComment:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/gestureRecognizer:shouldReceiveTouch:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (BOOL)gestureRecognizer:(UIGestureRecognizer *)panGestureRecognizer shouldReceiveTouch:(UITouch *)touch</Declaration>
			
			
			<Anchor>//api/name/gestureRecognizer:shouldReceiveTouch:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer</Declaration>
			
			
			<Anchor>//api/name/gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/handleCommentViewPan:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)handleCommentViewPan:(UIPanGestureRecognizer *)panRecognizer</Declaration>
			
			
			<Anchor>//api/name/handleCommentViewPan:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/handlePinch:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)handlePinch:(UIPinchGestureRecognizer *)pinchRecognizer</Declaration>
			
			
			<Anchor>//api/name/handlePinch:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/refreshPaginatedViewPages</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)refreshPaginatedViewPages</Declaration>
			
			
			<Anchor>//api/name/refreshPaginatedViewPages</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAPaginatedArticlesViewController/reloadViewContents</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>- (void)reloadViewContents</Declaration>
			
			
			<Anchor>//api/name/reloadViewContents</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAPaginatedArticlesViewController/paginatedView</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) IRPaginatedView *paginatedView</Declaration>
			
			
			<Anchor>//api/name/paginatedView</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAPaginatedArticlesViewController/coachmarkView</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) UIView *coachmarkView</Declaration>
			
			
			<Anchor>//api/name/coachmarkView</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAPaginatedArticlesViewController/paginationSlider</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) WAPaginationSlider *paginationSlider</Declaration>
			
			
			<Anchor>//api/name/paginationSlider</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAPaginatedArticlesViewController/articleViewControllers</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) NSArray *articleViewControllers</Declaration>
			
			
			<Anchor>//api/name/articleViewControllers</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAPaginatedArticlesViewController/articleCommentsDismissalButton</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) UIButton *articleCommentsDismissalButton</Declaration>
			
			
			<Anchor>//api/name/articleCommentsDismissalButton</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAPaginatedArticlesViewController/articleCommentsViewController</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAPaginatedArticlesViewController.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) WAArticleCommentsViewController *articleCommentsViewController</Declaration>
			
			
			<Anchor>//api/name/articleCommentsViewController</Anchor>
		</Token>
		
	</File>
</Tokens>