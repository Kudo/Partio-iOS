<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/WAStackedArticleViewController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/WAStackedArticleViewController</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>
			
			<NodeRef refid="71"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/stackView</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) IBOutlet WAStackView *stackView</Declaration>
			
			
			<Anchor>//api/name/stackView</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/onViewDidLoad</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, copy) void ( ^ ) ( WAArticleViewController *self , UIView *ownView ) onViewDidLoad</Declaration>
			
			
			<Anchor>//api/name/onViewDidLoad</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/onPullTop</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, copy) void ( ^ ) ( UIScrollView *pulledScrollView ) onPullTop</Declaration>
			
			
			<Anchor>//api/name/onPullTop</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/footerCell</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly, retain) UIView *footerCell</Declaration>
			
			
			<Anchor>//api/name/footerCell</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/headerView</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) UIView *headerView</Declaration>
			
			
			<Anchor>//api/name/headerView</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/topCell</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly, retain) WAArticleTextStackCell *topCell</Declaration>
			
			
			<Anchor>//api/name/topCell</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/textStackCell</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly, retain) WAArticleTextStackElement *textStackCell</Declaration>
			
			
			<Anchor>//api/name/textStackCell</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/textStackCellLabel</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly, retain) WAArticleTextEmphasisLabel *textStackCellLabel</Declaration>
			
			
			<Anchor>//api/name/textStackCellLabel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/commentsVC</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly, retain) WAArticleCommentsViewController *commentsVC</Declaration>
			
			
			<Anchor>//api/name/commentsVC</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/newArticleCommentsController</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>- (WAArticleCommentsViewController *)newArticleCommentsController</Declaration>
			
			
			<Anchor>//api/name/newArticleCommentsController</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/presentCommentsViewController:sender:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>- (void)presentCommentsViewController:(WAArticleCommentsViewController *)controller sender:(id)sender</Declaration>
			
			
			<Anchor>//api/name/presentCommentsViewController:sender:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/scrollableStackElementWrapper</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>- (UIView *)scrollableStackElementWrapper</Declaration>
			
			
			<Anchor>//api/name/scrollableStackElementWrapper</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/scrollableStackElement</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.h</DeclaredIn>			
			
			<Declaration>- (UIScrollView *)scrollableStackElement</Declaration>
			
			
			<Anchor>//api/name/scrollableStackElement</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/initWithNibName:bundle:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil</Declaration>
			
			
			<Anchor>//api/name/initWithNibName:bundle:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/dealloc</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)dealloc</Declaration>
			
			
			<Anchor>//api/name/dealloc</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/textStackElement:didRequestContentSizeToggle:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)textStackElement:(WAArticleTextStackElement *)element didRequestContentSizeToggle:(id)sender</Declaration>
			
			
			<Anchor>//api/name/textStackElement:didRequestContentSizeToggle:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/commentsPopover</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (UIPopoverController *)commentsPopover</Declaration>
			
			
			<Anchor>//api/name/commentsPopover</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/stackView:shouldStretchElement:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (BOOL)stackView:(WAStackView *)aStackView shouldStretchElement:(UIView *)anElement</Declaration>
			
			
			<Anchor>//api/name/stackView:shouldStretchElement:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/sizeThatFitsElement:inStackView:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (CGSize)sizeThatFitsElement:(UIView *)anElement inStackView:(WAStackView *)aStackView</Declaration>
			
			
			<Anchor>//api/name/sizeThatFitsElement:inStackView:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/articleCommentsViewController:wantsState:onFulfillment:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)articleCommentsViewController:(WAArticleCommentsViewController *)controller wantsState:(WAArticleCommentsViewControllerState)aState onFulfillment:(void ( ^ ) ( void ))aCompletionBlock</Declaration>
			
			
			<Anchor>//api/name/articleCommentsViewController:wantsState:onFulfillment:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/articleCommentsViewController:canSendComment:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (BOOL)articleCommentsViewController:(WAArticleCommentsViewController *)controller canSendComment:(NSString *)commentText</Declaration>
			
			
			<Anchor>//api/name/articleCommentsViewController:canSendComment:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/articleCommentsViewController:didFinishComposingComment:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)articleCommentsViewController:(WAArticleCommentsViewController *)controller didFinishComposingComment:(NSString *)commentText</Declaration>
			
			
			<Anchor>//api/name/articleCommentsViewController:didFinishComposingComment:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/articleCommentsViewControllerDidBeginComposition:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)articleCommentsViewControllerDidBeginComposition:(WAArticleCommentsViewController *)controller</Declaration>
			
			
			<Anchor>//api/name/articleCommentsViewControllerDidBeginComposition:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/articleCommentsViewControllerDidFinishComposition:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)articleCommentsViewControllerDidFinishComposition:(WAArticleCommentsViewController *)controller</Declaration>
			
			
			<Anchor>//api/name/articleCommentsViewControllerDidFinishComposition:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/articleCommentsViewController:didChangeContentSize:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)articleCommentsViewController:(WAArticleCommentsViewController *)controller didChangeContentSize:(CGSize)newSize</Declaration>
			
			
			<Anchor>//api/name/articleCommentsViewController:didChangeContentSize:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/adjustWrapperViewBoundsWithWindowInterfaceBounds:animated:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)adjustWrapperViewBoundsWithWindowInterfaceBounds:(CGRect)newInterfaceBounds animated:(BOOL)animate</Declaration>
			
			
			<Anchor>//api/name/adjustWrapperViewBoundsWithWindowInterfaceBounds:animated:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/viewDidLoad</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidLoad</Declaration>
			
			
			<Anchor>//api/name/viewDidLoad</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/viewDidUnload</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidUnload</Declaration>
			
			
			<Anchor>//api/name/viewDidUnload</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/viewWillAppear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewWillAppear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewWillAppear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/viewDidAppear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidAppear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewDidAppear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/viewWillDisappear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewWillDisappear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewWillDisappear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/viewDidDisappear:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)viewDidDisappear:(BOOL)animated</Declaration>
			
			
			<Anchor>//api/name/viewDidDisappear:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/handleWindowInterfaceBoundsDidChange:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)handleWindowInterfaceBoundsDidChange:(NSNotification *)notification</Declaration>
			
			
			<Anchor>//api/name/handleWindowInterfaceBoundsDidChange:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/handlePreferredInterfaceRect:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)handlePreferredInterfaceRect:(CGRect)aRect</Declaration>
			
			
			<Anchor>//api/name/handlePreferredInterfaceRect:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/isPointInsideInterfaceRect:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (BOOL)isPointInsideInterfaceRect:(CGPoint)aPoint</Declaration>
			
			
			<Anchor>//api/name/isPointInsideInterfaceRect:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/willRotateToInterfaceOrientation:duration:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration</Declaration>
			
			
			<Anchor>//api/name/willRotateToInterfaceOrientation:duration:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/didRotateFromInterfaceOrientation:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation</Declaration>
			
			
			<Anchor>//api/name/didRotateFromInterfaceOrientation:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/scrollViewWillBeginDragging:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView</Declaration>
			
			
			<Anchor>//api/name/scrollViewWillBeginDragging:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/scrollViewDidEndDragging:willDecelerate:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate</Declaration>
			
			
			<Anchor>//api/name/scrollViewDidEndDragging:willDecelerate:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/scrollViewDidEndDecelerating:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView</Declaration>
			
			
			<Anchor>//api/name/scrollViewDidEndDecelerating:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/scrollViewWillBeginDecelerating:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)scrollViewWillBeginDecelerating:(UIScrollView *)scrollView</Declaration>
			
			
			<Anchor>//api/name/scrollViewWillBeginDecelerating:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/scrollViewDidScroll:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)scrollViewDidScroll:(UIScrollView *)scrollView</Declaration>
			
			
			<Anchor>//api/name/scrollViewDidScroll:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WAStackedArticleViewController/scrollViewWillEndDragging:withVelocity:targetContentOffset:</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>- (void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint *)targetContentOffset</Declaration>
			
			
			<Anchor>//api/name/scrollViewWillEndDragging:withVelocity:targetContentOffset:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/foldsTextStackCell</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, assign) BOOL foldsTextStackCell</Declaration>
			
			
			<Anchor>//api/name/foldsTextStackCell</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/commentsPopover</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) UIPopoverController *commentsPopover</Declaration>
			
			
			<Anchor>//api/name/commentsPopover</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WAStackedArticleViewController/wrapperView</TokenIdentifier>
			<Abstract></Abstract>
			<DeclaredIn>WAStackedArticleViewController.m</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite, retain) UIView *wrapperView</Declaration>
			
			
			<Anchor>//api/name/wrapperView</Anchor>
		</Token>
		
	</File>
</Tokens>